<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>js - 标签 - MizarZ&#39;s blog</title>
    <link>http://localhost:1313/tags/js/</link>
    <description>js - 标签 | MizarZ&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 16 Apr 2024 09:58:59 &#43;0200</lastBuildDate><atom:link href="http://localhost:1313/tags/js/" rel="self" type="application/rss+xml" /><item>
  <title>监测一个元素是否 resize （ResizeObserver） 以及与 resize 事件的比较</title>
  <link>http://localhost:1313/posts/%E7%9B%91%E6%B5%8B%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E6%98%AF%E5%90%A6-resize-resizeobserver-%E4%BB%A5%E5%8F%8A%E4%B8%8E-resize-%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%AF%94%E8%BE%83/</link>
  <pubDate>Tue, 16 Apr 2024 09:58:59 &#43;0200</pubDate>
  <author>MizarZ</author>
  <guid>http://localhost:1313/posts/%E7%9B%91%E6%B5%8B%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E6%98%AF%E5%90%A6-resize-resizeobserver-%E4%BB%A5%E5%8F%8A%E4%B8%8E-resize-%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%AF%94%E8%BE%83/</guid>
  <description><![CDATA[ResizeObserver监测元素的 resize 需要使用 ResizeObserver 类： 1 2 3 4 5 6 7 8 new ResizeObserver((entries) =&gt; { for (const x of iframe) { x.resize() } for(const entry of entries) { abc.size = entry.borderBoxSize } }).observe(root) 其中 ResizeObserver callback 中的参数 entries 指的是这]]></description>
</item>
<item>
  <title>js 解析以及文本化 DOM 元素的做法</title>
  <link>http://localhost:1313/posts/js-%E8%A7%A3%E6%9E%90%E4%BB%A5%E5%8F%8A%E6%96%87%E6%9C%AC%E5%8C%96-dom-%E5%85%83%E7%B4%A0%E7%9A%84%E5%81%9A%E6%B3%95/</link>
  <pubDate>Tue, 16 Apr 2024 09:51:52 &#43;0200</pubDate>
  <author>MizarZ</author>
  <guid>http://localhost:1313/posts/js-%E8%A7%A3%E6%9E%90%E4%BB%A5%E5%8F%8A%E6%96%87%E6%9C%AC%E5%8C%96-dom-%E5%85%83%E7%B4%A0%E7%9A%84%E5%81%9A%E6%B3%95/</guid>
  <description><![CDATA[解析 DOM 文本使用 DOMParser： 1 2 3 4 5 6 7 const parser = new DOMParser(); const xmlString = &#34;&lt;warning&gt;Beware of the tiger&lt;/warning&gt;&#34;; const doc1 = parser.parseFromString(xmlString, &#34;application/xml&#34;); const htmlString = &#34;&lt;strong&gt;Beware of the leopard&lt;/strong&gt;&#34;; const doc2 = parser.parseFromString(htmlString, &#34;text/html&#34;); parser.parseFromString 返回类型为 Document，这种]]></description>
</item>
</channel>
</rss>
