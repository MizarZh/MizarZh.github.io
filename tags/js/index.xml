<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>js on MizarZ&#39;s Blog</title>
    <link>https://mizarzh.github.io/tags/js/</link>
    <description>Recent content in js on MizarZ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 26 Jan 2022 16:15:31 +0800</lastBuildDate><atom:link href="https://mizarzh.github.io/tags/js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Echarts基本使用</title>
      <link>https://mizarzh.github.io/p/2022/01/echarts%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 26 Jan 2022 16:15:31 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2022/01/echarts%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>简介 本文仅是一个快速入手的基本使用简介，详细配置项请到官网去（真的非常详细！） 官网地址：https://echarts.apache.org</description>
    </item>
    
    <item>
      <title>前端下载原始实现</title>
      <link>https://mizarzh.github.io/p/2022/01/%E5%89%8D%E7%AB%AF%E4%B8%8B%E8%BD%BD%E5%8E%9F%E5%A7%8B%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 24 Jan 2022 22:07:49 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2022/01/%E5%89%8D%E7%AB%AF%E4%B8%8B%E8%BD%BD%E5%8E%9F%E5%A7%8B%E5%AE%9E%E7%8E%B0/</guid>
      <description>如果服务器有公开的路径 调用 window.location 跳到指定的路径。 如果使用二进制传输 服务端： 内部传二进制类型，并设置 HTTP 头： Content-Type: application/octet-stream 前端： 首先要设置 XMLHTTPRequest 的 responseType 为 arrayb</description>
    </item>
    
    <item>
      <title>Sequelize基本使用-2</title>
      <link>https://mizarzh.github.io/p/2022/01/sequelize%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-2/</link>
      <pubDate>Mon, 24 Jan 2022 15:01:36 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2022/01/sequelize%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-2/</guid>
      <description>Sequelize基本使用-2 C! R! U! D! 1、Model 实例 一个 Model 实例代表的是从这个 Model 中获取的对象（相对应的就是数据库中的一条或几条数据）。 创建</description>
    </item>
    
    <item>
      <title>Sequelize基本使用-1</title>
      <link>https://mizarzh.github.io/p/2022/01/sequelize%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-1/</link>
      <pubDate>Fri, 21 Jan 2022 22:50:12 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2022/01/sequelize%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-1/</guid>
      <description>Sequelize基本使用-1 1、介绍 Sequelize 是一个基于 Promise 的 Node.js ORM (Object Relational Mapping, 对象关系映射) 工具。 可以对很多数据库操作，支持 Postgres, MySQL, MariaDB, SQLite 等等数据库。 安装： npm install</description>
    </item>
    
    <item>
      <title>Date方法</title>
      <link>https://mizarzh.github.io/p/2022/01/date%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 20 Jan 2022 21:25:09 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2022/01/date%E6%96%B9%E6%B3%95/</guid>
      <description>1、概述、构造函数 Date 对象基于 Unix Time Stamp，即从 1970 年 1 月 1 日（UTC）起经过的毫秒数。 构造函数： new Date(); // 返回实例化时刻的日期和时间。 new Date(value); // value 是</description>
    </item>
    
    <item>
      <title>Object方法</title>
      <link>https://mizarzh.github.io/p/2021/11/object%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 13 Nov 2021 18:14:10 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2021/11/object%E6%96%B9%E6%B3%95/</guid>
      <description>通用 1、对于属性描述符的介绍见MDN 属性描述符 构造函数 // 对象初始化器（Object initialiser）或对象字面量（literal） { [</description>
    </item>
    
    <item>
      <title>Array方法</title>
      <link>https://mizarzh.github.io/p/2021/11/array%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Nov 2021 22:10:09 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2021/11/array%E6%96%B9%E6%B3%95/</guid>
      <description>1 通用提示 1、Array#someMethod()的含义是Array.prototype.someMethod()。 2、通常，callbac</description>
    </item>
    
    <item>
      <title>Js原生方法</title>
      <link>https://mizarzh.github.io/p/2021/11/js%E5%8E%9F%E7%94%9F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Nov 2021 19:49:42 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2021/11/js%E5%8E%9F%E7%94%9F%E6%96%B9%E6%B3%95/</guid>
      <description>本文章是 You Dont Konw JS 类型部分的一个笔记。 原生函数 常用的原生函数有： String() Number() Boolean() Array() Object() Function() RegExp() Date() Error() Symbol()——ES6 中新加入的 实际上，它们就是内建函数</description>
    </item>
    
    <item>
      <title>Js类型</title>
      <link>https://mizarzh.github.io/p/2021/11/js%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Tue, 09 Nov 2021 20:16:46 +0800</pubDate>
      
      <guid>https://mizarzh.github.io/p/2021/11/js%E7%B1%BB%E5%9E%8B/</guid>
      <description>本文章是 You Dont Konw JS 类型部分的一个笔记。 1 js类型 js有七种内置类型： 空值（null） 未定义（undefined） 布尔值（boolean） 数字（</description>
    </item>
    
  </channel>
</rss>
