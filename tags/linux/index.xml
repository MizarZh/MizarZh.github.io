<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>linux on MizarZ&#39;s Blog</title>
        <link>https://mizarzh.github.io/tags/linux/</link>
        <description>Recent content in linux on MizarZ&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 25 Jan 2022 18:22:22 +0800</lastBuildDate><atom:link href="https://mizarzh.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Pm2介绍及使用</title>
        <link>https://mizarzh.github.io/p/2022/01/pm2%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Tue, 25 Jan 2022 18:22:22 +0800</pubDate>
        
        <guid>https://mizarzh.github.io/p/2022/01/pm2%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;因为某项目使用 nohup 在后台挂机总是莫名其妙就断掉了很生气，因此我当场换成 pm2 帮我管理这些 node 项目。&lt;/p&gt;
&lt;p&gt;pm2 是一个 node 进程管理工具，可以简化很多 node 应用管理的任务，如性能监控、自动重启&lt;/p&gt;
&lt;p&gt;负载均衡等。&lt;/p&gt;
&lt;p&gt;安装 pm2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g pm2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;核心命令&#34;&gt;核心命令&lt;/h2&gt;
&lt;h3 id=&#34;一些常见操作&#34;&gt;一些常见操作&lt;/h3&gt;
&lt;p&gt;启动、重新加载、重启、关闭、删除：&lt;/p&gt;
&lt;p&gt;可以指定多个 app：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 start app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 reload app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 restart app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 stop app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 delete app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;app.js&lt;/code&gt; 也可以换成 &lt;code&gt;all&lt;/code&gt; 代表全部，换成 &lt;code&gt;id&lt;/code&gt; 代表这个进程的编号，换成字符串（如&amp;quot;npm run start&amp;quot;）代表执行 bash 命令。&lt;/p&gt;
&lt;p&gt;启动可以给入的参数（&lt;code&gt;start, restart&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 传入参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-- arg1 arg2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 更新环境（通常前面设置 NODE_ENV 改变）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--update-env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;列出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;list&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ls&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;l&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;status&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 后面加上参数，代表按照……进行排序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--sort &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;id&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;pid&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;memory&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cpu&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;status&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;uptime&lt;span class=&#34;o&#34;&gt;][&lt;/span&gt;:asc&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;desc&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dashboard：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 monit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显示元信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 show app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重置重启次数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 reset app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pm2 也可以使用文件模式进行配置，因为太长本文不介绍。详情见 &lt;a class=&#34;link&#34; href=&#34;https://pm2.keymetrics.io/docs/usage/application-declaration/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pm2 configureation file&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;静态文件&#34;&gt;静态文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 serve &amp;lt;path&amp;gt; &amp;lt;port&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以像普通的 app 一样指定参数。&lt;/p&gt;
&lt;p&gt;SPA：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 serve --spa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;会自动定位到 &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基本 auth：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 serve --basic-auth-username &amp;lt;username&amp;gt; --basic-auth-password &amp;lt;password&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;重启策略&#34;&gt;重启策略&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在某一个 cron 时间重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--cron-restart&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0 0 * * *&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--cron-restart &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 不使用 cron 重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 文件改变时重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--watch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 最大内存重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--max-memory-restart 300M
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 重启延迟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--restart-delay&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 不自动重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--no-autorestart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--stop-exit-codes &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 指数增长的重启延迟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--exp-backoff-restart-delay&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;记录logs&#34;&gt;记录（logs）&lt;/h2&gt;
&lt;p&gt;默认的记录文件在 &lt;code&gt;$HOME/.pm2/&lt;/code&gt; 文件夹中&lt;/p&gt;
&lt;h3 id=&#34;显示记录&#34;&gt;显示记录&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;❯ pm2 logs -h
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Usage: logs &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;id&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;namespace&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# pm2 logs 选项 + app&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  stream logs file. Default stream all logs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 三种格式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --json                json log output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --format              formated log output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --raw                 raw output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 只显示错误或标准输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --err                 only shows error output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --out                 only shows standard output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 显示 n 行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --lines &amp;lt;n&amp;gt;           output the last N lines, instead of the last &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; by default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 增加时间戳&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --timestamp &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;format&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  add timestamps &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default format YYYY-MM-DD-HH:mm:ss&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 仅打印 logs，不记录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --nostream            print logs without lauching the log stream
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 高光一些值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --highlight &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;value&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;   highlights the given value
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -h, --help            output usage information
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;限制 log 大小，需要使用 &lt;code&gt;pm2-logrotate&lt;/code&gt; 插件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 install pm2-logrotate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;刷新 log：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 flush &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;app&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;开启-app-时指定的-log-设置&#34;&gt;开启 app 时指定的 log 设置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-l --log &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;path&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;# 指定输出路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-o --output &amp;lt;path&amp;gt;           &lt;span class=&#34;c1&#34;&gt;# 指定标准输出路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-e --error &amp;lt;path&amp;gt;            &lt;span class=&#34;c1&#34;&gt;# 指定错误输出路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--time                       &lt;span class=&#34;c1&#34;&gt;# 使用标准时间戳记录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--log-date-format &amp;lt;format&amp;gt;   &lt;span class=&#34;c1&#34;&gt;# 自定义时间戳记录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--merge-logs                 &lt;span class=&#34;c1&#34;&gt;# 运行多个进程时使用同一个文件记录，不依照 id 区分&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;持续运行&#34;&gt;持续运行&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ pm2 startup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;PM2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; You have to run this &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; as root. Execute the following command:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      sudo su -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;env PATH=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:/home/unitech/.nvm/versions/node/v14.3/bin pm2 startup &amp;lt;distribution&amp;gt; -u &amp;lt;user&amp;gt; --hp &amp;lt;home-path&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;复制并执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo su -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;env PATH=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:/home/unitech/.nvm/versions/node/v14.3/bin pm2 startup &amp;lt;distribution&amp;gt; -u &amp;lt;user&amp;gt; --hp &amp;lt;home-path&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就可以了。&lt;/p&gt;
&lt;p&gt;保存 app 列表，在重启时会马上再次运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 save
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;回滚？（resurrect），回到 save 时的版本：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pm2 resurrect 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;取消开启时运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 unstartup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;cluster-集群&#34;&gt;cluster 集群&lt;/h2&gt;
&lt;p&gt;Node.js 的单个实例在单个线程中运行。 为了利用多核系统，用户有时会想要启动 Node.js 进程的集群来处理负载。集群模块可以轻松创建共享服务器端口的子进程。&lt;/p&gt;
&lt;p&gt;pm2 中也可以使用 cluster 集群，传入 &lt;code&gt;-i&lt;/code&gt; 选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 start app.js -i max
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;max&lt;/code&gt; 代表 pm2 会自动探测有多少核的 CPU，并尝试运行最多的进程。&lt;/p&gt;
&lt;h2 id=&#34;部署系统&#34;&gt;部署系统&lt;/h2&gt;
&lt;p&gt;见 &lt;a class=&#34;link&#34; href=&#34;https://pm2.keymetrics.io/docs/usage/deployment/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deployment System&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cron基本用法</title>
        <link>https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
        <pubDate>Mon, 24 Jan 2022 20:00:48 +0800</pubDate>
        
        <guid>https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
        <description>&lt;h2 id=&#34;1简介&#34;&gt;1、简介&lt;/h2&gt;
&lt;p&gt;cron 是一个能让用户定时执行指令的程序，这些任务被称为 cron jobs。&lt;/p&gt;
&lt;p&gt;cron 是一个守护进程（daemon）。守护进程是一个后台执行非交互指令的进程，一个守护进程总是会等待执行的命令。&lt;/p&gt;
&lt;p&gt;cron 文件是一个文本文件，里面记载了在何时运行的程序。配置文件在 &lt;code&gt;/etc/cron.\*/&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;cron 的最小运行周期是 60s。&lt;/p&gt;
&lt;h2 id=&#34;2使用&#34;&gt;2、使用&lt;/h2&gt;
&lt;p&gt;linux 命令：crontab&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/image-20220124201758322.png&#34;
	width=&#34;704&#34;
	height=&#34;245&#34;
	srcset=&#34;https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/image-20220124201758322_hu757016c1579b6e9c8107d0004151dd5b_29716_480x0_resize_box_3.png 480w, https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/image-20220124201758322_hu757016c1579b6e9c8107d0004151dd5b_29716_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;crontab命令&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;287&#34;
		data-flex-basis=&#34;689px&#34;
	
&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-u 指定用户
-e 编辑该用户的 crontab
-l 列出该用户的 crontab
-r 删除该用户的 crontab
-i 删除前询问
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3cron-结构&#34;&gt;3、Cron 结构&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* * * * * * [*] command
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/cron-2131.jpg&#34;
	width=&#34;720&#34;
	height=&#34;341&#34;
	srcset=&#34;https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/cron-2131_hu017fa58ad84a7baa4409ee61d2e53480_91695_480x0_resize_q75_box.jpg 480w, https://mizarzh.github.io/p/2022/01/cron%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/cron-2131_hu017fa58ad84a7baa4409ee61d2e53480_91695_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;cron sytax&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在这七个位置的*号分别代表七个不同的时间点，指定的是相应的时间点。最后一个选项年是可以省略的（毕竟没有重复的年）。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0 0 0 \* \* 5 backup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;指的就是每周五0点0时0分进行备份。&lt;/p&gt;
&lt;p&gt;在这些*号里面还可以指定其他的符号，以符合相应的匹配。&lt;/p&gt;
&lt;p&gt;其他的符号：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;\* [全体] 代表每次都触发
, [全体] 代表多个时间点触发。如小时 1,5,8 就是 一点、五点、八点
- [全体] 代表一个范围的触发，如 4-7 就是 4,5,6,7
/ [全体] 代表步进，/前面的值代表初始值，后面的值代表隔多久进行触发一次。如1-20/2 天，就是在1-20的范围内每隔2天进行一次。
L [星期、日期] 代表这个月的最后一天或这个月的最后一个星期X，前面可加数字指定是最后第几个。如最后一天 L，最后第二个星期三 3L
W [日期] 指定距离每个月第几天最近的工作日。如 1W 指定的就是距离这个月第一天最近的工作日（如果这个月第一天是周六，那么指定的天数就是3）。
# [星期] 前面的数字代表星期X，第二个数字代表这个月的第几个。例如 1#2 的意思是这个月的第二个星期一
? [星期、日期] 如果明确了{日期}触发，则{星期}无意义，反之也成立。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;特殊命令：&lt;/p&gt;
&lt;p&gt;这些命令可以直接替换掉整行 &lt;code&gt;\* \* \* \* \* \*&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@hourly 每小时
@daily / @midnight 在每天0点执行命令
@weekly 在周六晚上运行命令
@monthly 在每个月第一天运行命令
@yearly 在每年1月1日午夜运行命令
@reboot 在启动时运行此命令
这些命令要注意时区的问题
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;记忆得很困难？网上有许多生成 cron 执行时间的网站，赶快试试吧~&lt;/p&gt;
&lt;h2 id=&#34;4一些其他的内容&#34;&gt;4、一些其他的内容&lt;/h2&gt;
&lt;p&gt;cron 权限：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/cron.allow&lt;/strong&gt; 存在，那么就允许其中的用户创建计划表。&lt;strong&gt;/etc/cron.deny&lt;/strong&gt; 存在，就阻止。&lt;/p&gt;
&lt;p&gt;node 中使用 cron：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install cron
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cron&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;node-cron&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;job&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CronJob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s1&#34;&gt;&amp;#39;* * * * * *&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;You will see this message every second&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s1&#34;&gt;&amp;#39;America/Los_Angeles&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文档见：&lt;a class=&#34;link&#34; href=&#34;https://github.com/kelektiv/node-cron&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;node-cron&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Node在linux上的更新问题</title>
        <link>https://mizarzh.github.io/p/2022/01/node%E5%9C%A8linux%E4%B8%8A%E7%9A%84%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/</link>
        <pubDate>Fri, 21 Jan 2022 22:50:01 +0800</pubDate>
        
        <guid>https://mizarzh.github.io/p/2022/01/node%E5%9C%A8linux%E4%B8%8A%E7%9A%84%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;由于 node 在 linux 的包（指的是使用 &lt;code&gt;apt install&lt;/code&gt; 安装的包）长期不更新，而手动下载再改 PATH 并进行管理十分麻烦，因此有一个小技巧，可以使用 &lt;code&gt;apt install&lt;/code&gt;  安装到新版本。&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://nodesource.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;nodesource&lt;/a&gt; 将继续维护各种 linux distributions 的 apt install 更新。&lt;/p&gt;
&lt;p&gt;运行以下脚本（Ubuntu 环境下。其中 &lt;code&gt;setup_17.x&lt;/code&gt; 中的数字 17 可以替换成其他版本如 16、14等）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -fsSL https://deb.nodesource.com/setup_17.x &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo -E bash - &lt;span class=&#34;c1&#34;&gt;# 这一句是为了获取安装脚本，以替代原来老旧的 node 路径。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install -y nodejs &lt;span class=&#34;c1&#34;&gt;# 用更新的路径安装 nodejs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即可完成新版本的安装。&lt;/p&gt;
&lt;p&gt;Debian 系统与 Ubuntu 系统的安装脚本有些不同，详见 &lt;a class=&#34;link&#34; href=&#34;https://github.com/nodesource/distributions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub - nodesource/distributions: NodeSource Node.js Binary Distributions&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Terminal查看远程图片</title>
        <link>https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/</link>
        <pubDate>Sat, 27 Nov 2021 20:24:46 +0800</pubDate>
        
        <guid>https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;为了查看远程服务器的图片，通常需要使用 scp 命令将图片传到本地查看，然后就要切换标签、输入特别长的路径 etc 一系列麻烦的东西，因此如果能直接输入查看图片的命令就能自动弹出图片就更好了。&lt;/p&gt;
&lt;h2 id=&#34;原理解决方案&#34;&gt;原理&amp;amp;解决方案&lt;/h2&gt;
&lt;p&gt;通过命令行查看图片的原理是通过 Linux 系统内置的 X11 forwarding 功能传输图片，而平常无法做到的问题是 windows 和 mac 不存在这个东西。解决方法就是在 windows 和 mac 上安装有 X11 forwarding 功能的辅助软件即可。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;1、确定服务器 Linux 是否开启了 X11 forwarding 功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo vi /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# X11Forwarding Yes 其中的这一行改成这样子&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo service sshd restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2、客户端系统，windows 安装 &lt;a class=&#34;link&#34; href=&#34;https://sourceforge.net/projects/xming/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xming&lt;/a&gt; ，mac 安装 &lt;a class=&#34;link&#34; href=&#34;https://www.xquartz.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;XQuartz&lt;/a&gt;， Linux 像上面一样打开即可。&lt;/p&gt;
&lt;p&gt;以 windows 为例：&lt;/p&gt;
&lt;p&gt;安装后打开 XLaunch，配置如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211655852.png&#34;
	width=&#34;635&#34;
	height=&#34;481&#34;
	srcset=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211655852_hub239f86ea83e0bc489f7783ba7e585be_76204_480x0_resize_box_3.png 480w, https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211655852_hub239f86ea83e0bc489f7783ba7e585be_76204_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;第一页配置&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211814274.png&#34;
	width=&#34;635&#34;
	height=&#34;481&#34;
	srcset=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211814274_huca90b04983ecad01d314ccabd072df73_56348_480x0_resize_box_3.png 480w, https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127211814274_huca90b04983ecad01d314ccabd072df73_56348_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;第三页配置&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（记得勾上 No Access Control）&lt;/p&gt;
&lt;p&gt;并确保其在右下角后台运行。&lt;/p&gt;
&lt;p&gt;3、ssh 连接时开启 X11 连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -Y xxx@xxx.xxx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来使用任何带 GUI 功能都会弹出一个窗口了。&lt;/p&gt;
&lt;p&gt;4、测试：使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install x11-apps
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xclock
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xeyes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不出问题，输入测试样例之后就能弹出图形化窗口。&lt;/p&gt;
&lt;h2 id=&#34;x11介绍&#34;&gt;X11介绍&lt;/h2&gt;
&lt;h3 id=&#34;x&#34;&gt;X&lt;/h3&gt;
&lt;p&gt;X 就是 X WIndows System，是为 Linux 系统提供 GUI 功能（Linux 内核是没有 GUI 的）。&lt;/p&gt;
&lt;h3 id=&#34;x11&#34;&gt;X11&lt;/h3&gt;
&lt;p&gt;X11 就是第十一个版本。这个版本在1987年就已经是第11版了。&lt;/p&gt;
&lt;h3 id=&#34;x-client--server&#34;&gt;X Client &amp;amp; Server&lt;/h3&gt;
&lt;p&gt;X11 协议的客户端和服务端。Client 主要是告知 Server 要绘制什么。Server 的功能主要是管理主机的硬件设备。&lt;/p&gt;
&lt;h2 id=&#34;python-的问题&#34;&gt;python 的问题&lt;/h2&gt;
&lt;p&gt;当然，找到这么一个解决方案，那当然是要试试 python 画图啦，但是却有错误（python 未配置 tkinter）。&lt;/p&gt;
&lt;p&gt;原因是需要设置 matplotlib 的画图环境：&lt;/p&gt;
&lt;p&gt;合法的画图环境：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ValueError: &amp;#39;&amp;#39; is not a valid value for backend; supported values are [&amp;#39;GTK3Agg&amp;#39;, &amp;#39;GTK3Cairo&amp;#39;, &amp;#39;MacOSX&amp;#39;, &amp;#39;nbAgg&amp;#39;, &amp;#39;Qt4Agg&amp;#39;, &amp;#39;Qt4Cairo&amp;#39;, &amp;#39;Qt5Agg&amp;#39;, &amp;#39;Qt5Cairo&amp;#39;, &amp;#39;TkAgg&amp;#39;, &amp;#39;TkCairo&amp;#39;, &amp;#39;WebAgg&amp;#39;, &amp;#39;WX&amp;#39;, &amp;#39;WXAgg&amp;#39;, &amp;#39;WXCairo&amp;#39;, &amp;#39;agg&amp;#39;, &amp;#39;cairo&amp;#39;, &amp;#39;pdf&amp;#39;, &amp;#39;pgf&amp;#39;, &amp;#39;ps&amp;#39;, &amp;#39;svg&amp;#39;, &amp;#39;template&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若要使用 tkinter，需要输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install python3-tk
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tkinker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127222951974.png&#34;
	width=&#34;1045&#34;
	height=&#34;771&#34;
	srcset=&#34;https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127222951974_hue40bf828d262ac41d9e48593c45e4d07_59124_480x0_resize_box_3.png 480w, https://mizarzh.github.io/p/2021/11/terminal%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87/image-20211127222951974_hue40bf828d262ac41d9e48593c45e4d07_59124_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;测试结果&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;325px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;feh命令&#34;&gt;feh命令&lt;/h2&gt;
&lt;p&gt;在 Linux 中查看图片的命令有很多，如 &lt;code&gt;eog, display, gimp&lt;/code&gt; 等等。这里使用 &lt;code&gt;feh&lt;/code&gt; 是因为其有一定的图片编辑能力且轻量级。&lt;/p&gt;
&lt;p&gt;安装及测试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install feh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;feh somePicture
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
